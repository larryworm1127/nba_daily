# Generated by Django 2.2.3 on 2019-07-10 13:27

import math
from dateutil import parser
from django.db import migrations
from pandas import read_json
from simplejson import load, dumps


def load_game_data(apps, schema_editor):
    Game = apps.get_model('main', 'Game')
    Team = apps.get_model('main', 'Team')

    with open('main/data/game_list.json') as f:
        games = load(f)

    for game_id in games:
        boxscore = read_json(f'main/data/boxscore/2018-19/{game_id}.json')
        game_summary = read_json(f'main/data/boxscore_summary/game_summary/2018-19/{game_id}.json')
        inactive_data = read_json(f'main/data/boxscore_summary/inactive_player/2018-19/{game_id}.json')

        dnp_players = {
            data['PLAYER_ID']: data['COMMENT'].strip() for _, data in boxscore.iterrows() if math.isnan(data['PF'])
        }
        inactive_players = [
            p_data['PLAYER_ID'] for _, p_data in inactive_data.iterrows()
        ]
        Game(
            game_id=game_id,
            season=game_summary['SEASON'],
            game_date=parser.parse(game_summary['GAME_DATE_EST']).strftime("%b %d, %Y"),
            dnp_players=dumps(dnp_players),
            inactive_players=dumps(inactive_players),
            home_team=Team.objects.filter(team_id=game_summary['HOME_TEAM_ID'])[0],
            away_team=Team.objects.filter(team_id=game_summary['VISITOR_TEAM_ID'])[0]
        ).save()


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_populate_player_data'),
    ]

    operations = [
        migrations.RunPython(load_game_data)
    ]
